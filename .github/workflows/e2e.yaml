name: e2e

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  e2e:
    runs-on: actuated-aarch64
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - uses: alexellis/setup-arkade@v2
      - uses: alexellis/arkade-get@master
        with:
          kubectl: latest
          faas-cli: latest
          kind: latest
      - name: Install Kubernetes KinD
        run: |
          mkdir -p $HOME/.kube/
          kind create cluster --wait 5s
      - name: Wait for nodes to be ready
        run: |
          for i in {1..10};
          do
            retVal=$((kubectl wait --for=condition=ready node --all --timeout=300s | grep "condition met" -c) || echo -n "retry")

            if [ "$retVal" -nq "retry" ];
            then
              echo "Node ready"
              break
            fi
            sleep 2
          done
      - name: Add Helm chart, update repos and apply namespaces
        run: |
            kubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml
            helm repo add openfaas https://openfaas.github.io/faas-netes/
            helm repo update
      - name: Install the Community Edition (CE)
        run: |
            helm repo update \
            && helm upgrade openfaas --install openfaas/openfaas \
                --namespace openfaas  \
                --set functionNamespace=openfaas-fn
      - name: Wait until OpenFaaS is ready
        run: |
            kubectl rollout status -n openfaas deploy/prometheus --timeout 5m
            kubectl rollout status -n openfaas deploy/gateway --timeout 5m
      - name: Port forward the gateway
        run: |
            kubectl port-forward -n openfaas svc/gateway 8080:8080 &

            attempt_counter=0
            max_attempts=10

            until $(curl --output /dev/null --silent --fail http://127.0.0.1:8080/healthz ); do
                if [ ${attempt_counter} -eq ${max_attempts} ];then
                echo "Max attempts reached"
                exit 1
                fi

                printf '.'
                attempt_counter=$(($attempt_counter+1))
                sleep 1
            done
      - name: Login to OpenFaaS gateway and deploy a function
        run: |
           PASSWORD=$(kubectl get secret -n openfaas basic-auth -o jsonpath="{.data.basic-auth-password}" | base64 --decode; echo)
           echo -n $PASSWORD | faas-cli login --username admin --password-stdin 

           faas-cli store deploy env

           faas-cli invoke env <<< ""

           curl http://127.0.0.1:8080/function/env

           faas-cli invoke --async env <<< ""

           kubectl logs -n openfaas deploy/queue-worker

           faas-cli describe env
